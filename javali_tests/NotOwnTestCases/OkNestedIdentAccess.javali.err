Debug information for file: javali_tests/NotOwnTestCases/OkNestedIdentAccess.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: result, type: boolean)
| | Seq ()
| | | Assign ()
| | | | Var (name: result)
| | | | BinaryOp (operator: B_EQUAL)
| | | | | MethodCallExpr (methodName: method)
| | | | | | Var (name: a)
| | | | | | IntConst (value: 0)
| | | | | | IntConst (value: 0)
| | | | | MethodCallExpr (methodName: method)
| | | | | | Var (name: b)
| | | | | | IntConst (value: 0)
| | | | | | IntConst (value: 0)
| | | Assign ()
| | | | Field (fieldName: array)
| | | | | Var (name: a)
| | | | NewArray (typeName: A[])
| | | | | IntConst (value: 32)
| | | Assign ()
| | | | Index ()
| | | | | Field (fieldName: array)
| | | | | | Var (name: a)
| | | | | IntConst (value: 0)
| | | | Var (name: a)
ClassDecl (name: A, superClass: B)
| VarDecl (name: array, type: A[])
| MethodDecl (argumentNames: [left, right], argumentTypes: [int, int], name: method, returnType: int)
| | Seq ()
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: result, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: result)
| | | | Var (name: left)
| | | Assign ()
| | | | Index ()
| | | | | Var (name: array)
| | | | | Var (name: right)
| | | | ThisRef ()
| | | Assign ()
| | | | Var (name: result)
| | | | Field (fieldName: field)
| | | | | Var (name: b)
| | | Assign ()
| | | | Var (name: result)
| | | | Index ()
| | | | | Var (name: size)
| | | | | Var (name: left)
| | | Assign ()
| | | | Var (name: result)
| | | | MethodCallExpr (methodName: method)
| | | | | ThisRef ()
| | | | | IntConst (value: 0)
| | | | | IntConst (value: 0)
| | | Assign ()
| | | | Var (name: result)
| | | | MethodCallExpr (methodName: method)
| | | | | Var (name: b)
| | | | | IntConst (value: 0)
| | | | | IntConst (value: 0)
| | | ReturnStmt ()
| | | | Var (name: result)
ClassDecl (name: B, superClass: C)
| VarDecl (name: size, type: int[])
ClassDecl (name: C, superClass: Object)
| VarDecl (name: field, type: int)
| VarDecl (name: a, type: A)
| MethodDecl (argumentNames: [i, j], argumentTypes: [int, int], name: method, returnType: int)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: result, type: boolean)
| | | VarDecl (name: var, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: result)
| | | | BinaryOp (operator: B_GREATER_OR_EQUAL)
| | | | | Index ()
| | | | | | Field (fieldName: size)
| | | | | | | Var (name: a)
| | | | | | Field (fieldName: field)
| | | | | | | Var (name: a)
| | | | | Field (fieldName: field)
| | | | | | Var (name: b)
| | | Assign ()
| | | | Var (name: var)
| | | | MethodCallExpr (methodName: method)
| | | | | MethodCallExpr (methodName: object)
| | | | | | ThisRef ()
| | | | | Var (name: i)
| | | | | Var (name: j)
| | | Assign ()
| | | | Var (name: var)
| | | | MethodCallExpr (methodName: method)
| | | | | ThisRef ()
| | | | | Field (fieldName: field)
| | | | | | Var (name: a)
| | | | | IntConst (value: 0)
| | | Assign ()
| | | | Var (name: result)
| | | | BinaryOp (operator: B_AND)
| | | | | BinaryOp (operator: B_EQUAL)
| | | | | | MethodCallExpr (methodName: object)
| | | | | | | Field (fieldName: a)
| | | | | | | | Var (name: a)
| | | | | | Var (name: a)
| | | | | UnaryOp (operator: U_BOOL_NOT)
| | | | | | Var (name: result)
| | | Assign ()
| | | | Var (name: var)
| | | | MethodCallExpr (methodName: method)
| | | | | MethodCallExpr (methodName: object)
| | | | | | Index ()
| | | | | | | Field (fieldName: array)
| | | | | | | | Var (name: a)
| | | | | | | Var (name: i)
| | | | | Var (name: i)
| | | | | Var (name: j)
| | | ReturnStmt ()
| | | | IntConst (value: 0)
| MethodDecl (argumentNames: [], argumentTypes: [], name: object, returnType: A)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: a)
Error message: No Variable array was found

Phase semantic failed because we expected to see:
OK
But we actually saw:
NO_SUCH_VARIABLE
The difference is:
At line   1 /   1:
< OK
> NO_SUCH_VARIABLE


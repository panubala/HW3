Debug information for file: javali_tests/NotOwnTestCases/OkTyping.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: main, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: c, type: C)
| | Seq ()
| | | Assign ()
| | | | Var (name: a)
| | | | NewObject (typeName: A)
| | | Assign ()
| | | | Var (name: c)
| | | | Var (name: b)
| | | Assign ()
| | | | Var (name: c)
| | | | MethodCallExpr (methodName: foo)
| | | | | Var (name: b)
| | | | | Var (name: a)
ClassDecl (name: A, superClass: B)
| MethodDecl (argumentNames: [left, right], argumentTypes: [int, int], name: method, returnType: boolean)
| | Seq ()
| | | VarDecl (name: array, type: A[])
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: i, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: array)
| | | | NewArray (typeName: A[])
| | | | | Var (name: i)
| | | IfElse ()
| | | | BinaryOp (operator: B_AND)
| | | | | Field (fieldName: g)
| | | | | | Var (name: b)
| | | | | Var (name: h)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Index ()
| | | | | | | Var (name: array)
| | | | | | | Var (name: i)
| | | | | | ThisRef ()
| | | | Seq ()
| | | WhileLoop ()
| | | | UnaryOp (operator: U_BOOL_NOT)
| | | | | BooleanConst (value: true)
| | | | Seq ()
| | | ReturnStmt ()
| | | | BooleanConst (value: true)
ClassDecl (name: B, superClass: C)
| VarDecl (name: g, type: boolean)
| VarDecl (name: h, type: boolean)
| MethodDecl (argumentNames: [b], argumentTypes: [B], name: foo, returnType: C)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: c, type: C)
| | Seq ()
| | | Assign ()
| | | | Var (name: g)
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | Assign ()
| | | | Var (name: a)
| | | | Cast (typeName: A)
| | | | | Var (name: c)
| | | Assign ()
| | | | Var (name: b)
| | | | Cast (typeName: B)
| | | | | Var (name: a)
| | | ReturnStmt ()
| | | | Var (name: a)
ClassDecl (name: C, superClass: Object)
| VarDecl (name: result, type: int)
| MethodDecl (argumentNames: [i, j], argumentTypes: [int, int], name: method, returnType: boolean)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: result)
| | | | BuiltInRead ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | Var (name: i)
| | | | | Var (name: j)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: i)
| | | | UnaryOp (operator: U_MINUS)
| | | | | Var (name: j)
| | | ReturnStmt ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: i)
| | | | | Var (name: j)
Error message: No Variable h was found

Phase semantic failed because we expected to see:
OK
But we actually saw:
NO_SUCH_VARIABLE
The difference is:
At line   1 /   1:
< OK
> NO_SUCH_VARIABLE

